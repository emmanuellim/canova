{
		"AWSTemplateFormatVersion" : "2010-09-09",
		
		"Description" : "AWS VPC CloudFormation Template for MAEStream: MAEStream is a revenue protection solution for utilities supply and distribution bodies. This template is for municipality level deployment.",
			
			
		"Parameters" : {
			"MunicipalityName" : {
				"Type" : "String",
				"MaxLength" : "20",
				"MinLength" : "3",
				"AllowedPattern" : "[a-z.a-z]*",
				"ConstraintDescription" : "must only contain lowercase letters and a period(.).",
				"Description" : "Name of the municipality the stack is being deployed for."
			},
			"ProvinceName" : {
				"Type" : "String",
				"MaxLength" : "2",
				"MinLength" : "2",
				"AllowedValues" : ["ns","pe","nb","qc","on","nl","mb","sk","ab","bc"],
				"ConstraintDescription" : "must only contain two uppercase letters.",
				"Description" : "Province abbreviation of the province the municipality is part of."
			}
		},	
			
			"Resources": {
			      "VPC": {
			          "Type": "AWS::EC2::VPC",
			          "Properties": {
			              "CidrBlock": "10.0.0.0/16",
			              "Tags": [
			                  {
								"Key": "Application",
			                    "Value": {"Ref": "AWS::StackName"}
							  },	
								
							  {	
								"Key": "Name",
								"Value": {"Fn::Join" :  [ "-", [ "VPC", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
			      "SubnetPublic": {
			          "Type": "AWS::EC2::Subnet",
			          "Properties": {
			              "VpcId": {"Ref": "VPC"},
			              "CidrBlock": "10.0.1.0/24",
						  "MapPublicIpOnLaunch": "True",
			              "Tags": [
			                  {
			                      "Key": "Application",
			                      "Value": {"Ref": "AWS::StackName"}
			                  },
							  
							  {	
								"Key": "Name",
								"Value": {"Fn::Join" :  [ "-", [ "PublicSubnet", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
				  "SubnetPrivate": {
			          "Type": "AWS::EC2::Subnet",
			          "Properties": {
			              "VpcId": {"Ref": "VPC"},
			              "CidrBlock": "10.0.2.0/24",
			              "Tags": [
			                  {
			                      "Key": "Application",
			                      "Value": {"Ref": "AWS::StackName"}
			                  },
							  
							  {	
								"Key": "Name",
								"Value": {"Fn::Join" :  [ "-", [ "PrivateSubnet", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
			      "InternetGateway": {
			          "Type": "AWS::EC2::InternetGateway",
			          "Properties": {
			              "Tags": [
			                  {
			                      "Key": "Application",
			                      "Value": {"Ref": "AWS::StackName"}
			                  },
							  
							  {	
								"Key": "Name",
								"Value": {"Fn::Join" :  [ "-", [ "InternetGateway", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
			      "AttachGateway": {
			          "Type": "AWS::EC2::VPCGatewayAttachment",
			          "Properties": {
			              "VpcId": {"Ref": "VPC"},
			              "InternetGatewayId": {"Ref": "InternetGateway"}
			          }
			      },
			      "RouteTablePublic": {
			          "Type": "AWS::EC2::RouteTable",
			          "Properties": {
			              "VpcId": {"Ref": "VPC"},
			              "Tags": [
			                  {
			                      "Key": "Application",
			                      "Value": {"Ref": "AWS::StackName"}
			                  },
							  
							  {	
								"Key": "Name",
								"Value": {"Fn::Join" :  [ "-", [ "PublicRouteTable", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
				  "RouteTablePrivate": {
			          "Type": "AWS::EC2::RouteTable",
			          "Properties": {
			              "VpcId": {"Ref": "VPC"},
			              "Tags": [
			                  {
			                      "Key": "Application",
			                      "Value": {"Ref": "AWS::StackName"}
			                  },
							  
							  {	
								"Key": "Name",
								"Value": {"Fn::Join" :  [ "-", [ "PrivateRouteTable", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
			      "Route": {
			          "Type": "AWS::EC2::Route",
			          "DependsOn": "AttachGateway",
			          "Properties": {
			              "RouteTableId": {"Ref": "RouteTablePublic"},
			              "DestinationCidrBlock": "0.0.0.0/0",
			              "GatewayId": {"Ref": "InternetGateway"}
			          }
			      },
				  "SubnetPublicRouteTableAssociation": {
			          "Type": "AWS::EC2::SubnetRouteTableAssociation",
			          "Properties": {
			              "SubnetId": {"Ref": "SubnetPublic"},
			              "RouteTableId": {"Ref": "RouteTablePublic"}
			          }
			      },
			      "SubnetPrivateRouteTableAssociation": {
			          "Type": "AWS::EC2::SubnetRouteTableAssociation",
			          "Properties": {
			              "SubnetId": {"Ref": "SubnetPrivate"},
			              "RouteTableId": {"Ref": "RouteTablePrivate"}
			          }
			      },
				  "PublicSecurityGroup" : {
					"Type" : "AWS::EC2::SecurityGroup",
					"Properties" : {
						"GroupDescription" : "Allow http/s to client host",
						"VpcId" : {"Ref" : "VPC"},
						"Tags": [
			                  {
			                      "Key": "Name",
			                      "Value": {"Fn::Join" :  [ "-", [ "PublicSecurityGroup", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
						],	  
						"SecurityGroupIngress" : [{
							"IpProtocol" : "tcp",
							"FromPort" : 22,
							"ToPort" : 22,
							"CidrIp" : "10.0.1.0/24"
						}],
						"SecurityGroupIngress" : [{
				           "IpProtocol" : "tcp",
				           "FromPort" : 80,
				           "ToPort" : 80,
				           "CidrIp" : "10.0.1.0/24"
						}],
						"SecurityGroupEgress" : [{
							"IpProtocol" : "tcp",
							"FromPort" : 443,
							"ToPort" : 443,
							"CidrIp" : "10.0.1.0/24"
						}],
						"SecurityGroupEgress" : [{
							"IpProtocol" : "tcp",
							"FromPort" : 22,
							"ToPort" : 22,
							"CidrIp" : "10.0.1.0/24"
						}]
					}
				},
				"PrivateSecurityGroup" : {
				    "Type" : "AWS::EC2::SecurityGroup",
				    "Properties" : {
				       "GroupDescription" : "Allow http/s,ICMP,SSH and MySQL to client host",
				       "VpcId" : {"Ref" : "VPC"},
					   "Tags": [
			                  {
			                      "Key": "Name",
			                      "Value": {"Fn::Join" :  [ "-", [ "PrivateSecurityGroup", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
						],	  
				       "SecurityGroupIngress" : [{
				           "IpProtocol" : "tcp",
				           "FromPort" : 80,
				           "ToPort" : 80,
				           "CidrIp" : "10.0.1.0/24"
				      }],
					  "SecurityGroupIngress" : [{
							"IpProtocol" : "tcp",
							"FromPort" : 22,
							"ToPort" : 22,
							"CidrIp" : "10.0.1.0/24"
						}],
				      "SecurityGroupIngress" : [{
				           "IpProtocol" : "tcp",
				           "FromPort" : 443,
				           "ToPort" : 443,
				           "CidrIp" : "10.0.1.0/24"
				      }],
					  "SecurityGroupIngress" : [{
				           "IpProtocol" : "tcp",
				           "FromPort" : 3306,
				           "ToPort" : 3306,
				           "CidrIp" : "10.0.1.0/24"
				      }],
					  "SecurityGroupIngress" : [{
				           "IpProtocol" : "ICMP",
				           "FromPort" : -1,
				           "ToPort" : -1,
				           "CidrIp" : "10.0.1.0/24"
				      }]
				   }
				},
			      "NetworkAcl": {
			          "Type": "AWS::EC2::NetworkAcl",
			          "Properties": {
			              "VpcId": {"Ref": "VPC"},
			              "Tags": [
			                  {
			                      "Key": "Application",
			                      "Value": {"Ref": "AWS::StackName"}
			                  },
							  
							  {
			                      "Key": "Name",
			                      "Value": {"Fn::Join" :  [ "-", [ "NetworkACL", {"Ref" : "MunicipalityName"},{"Ref" : "ProvinceName"}] ]}
			                  }
			              ]
			          }
			      },
			      "InboundHTTPNetworkAclEntry": {
			          "Type": "AWS::EC2::NetworkAclEntry",
			          "Properties": {
			              "NetworkAclId": {"Ref": "NetworkAcl"},
			              "RuleNumber": "100",
			              "Protocol": "6",
			              "RuleAction": "allow",
			              "Egress": "false",
			              "CidrBlock": "0.0.0.0/0",
			              "PortRange": {"From": "80","To": "80"}
			          }
			      },
			      "InboundSSHNetworkAclEntry": {
			          "Type": "AWS::EC2::NetworkAclEntry",
			          "Properties": {
			              "NetworkAclId": {"Ref": "NetworkAcl"},
			              "RuleNumber": "101",
			              "Protocol": "6",
			              "RuleAction": "allow",
			              "Egress": "false",
			              "CidrBlock": "0.0.0.0/0",
			              "PortRange": {"From": "22","To": "22"}
			          }
			      },
			      "InboundResponsePortsNetworkAclEntry": {
			          "Type": "AWS::EC2::NetworkAclEntry",
			          "Properties": {
			              "NetworkAclId": {"Ref": "NetworkAcl"},
			              "RuleNumber": "102",
			              "Protocol": "6",
			              "RuleAction": "allow",
			              "Egress": "false",
			              "CidrBlock": "0.0.0.0/0",
			              "PortRange": {"From": "1024","To": "65535"}
			          }
			      },
			      "OutBoundHTTPNetworkAclEntry": {
			          "Type": "AWS::EC2::NetworkAclEntry",
			          "Properties": {
			              "NetworkAclId": {"Ref": "NetworkAcl"},
			              "RuleNumber": "100",
			              "Protocol": "6",
			              "RuleAction": "allow",
			              "Egress": "true",
			              "CidrBlock": "0.0.0.0/0",
			              "PortRange": {"From": "80","To": "80"}
			          }
			      },
			      "OutBoundHTTPSNetworkAclEntry": {
			          "Type": "AWS::EC2::NetworkAclEntry",
			          "Properties": {
			              "NetworkAclId": {"Ref": "NetworkAcl"},
			              "RuleNumber": "101",
			              "Protocol": "6",
			              "RuleAction": "allow",
			              "Egress": "true",
			              "CidrBlock": "0.0.0.0/0",
			              "PortRange": {"From": "443","To": "443"}
			          }
			      },
			      "OutBoundResponsePortsNetworkAclEntry": {
			          "Type": "AWS::EC2::NetworkAclEntry",
			          "Properties": {
			              "NetworkAclId": {"Ref": "NetworkAcl"},
			              "RuleNumber": "102",
			              "Protocol": "6",
			              "RuleAction": "allow",
			              "Egress": "true",
			              "CidrBlock": "0.0.0.0/0",
			              "PortRange": {"From": "1024","To": "65535"}
			          }
			      },
				  "SubnetPublicNetworkAclAssociation": {
			          "Type": "AWS::EC2::SubnetNetworkAclAssociation",
			          "Properties": {
			              "SubnetId": {"Ref": "SubnetPublic"},
			              "NetworkAclId": {"Ref": "NetworkAcl"}
			          }
			      },
			      "SubnetPrivateNetworkAclAssociation": {
			          "Type": "AWS::EC2::SubnetNetworkAclAssociation",
			          "Properties": {
			              "SubnetId": {"Ref": "SubnetPrivate"},
			              "NetworkAclId": {"Ref": "NetworkAcl"}
			          }
			      }
		},
		"Outputs" : {
		"PublicSecurityGroup" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "PublicSecurityGroup" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-PublicSecurityGroup" }}
		},
		"PrivateSecurityGroup" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "PrivateSecurityGroup" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSecurityGroup" }}
		},
		"SubnetPublic" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "SubnetPublic" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-SubnetPublic" }}
		},
		"SubnetPrivate" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "SubnetPrivate" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-SubnetPrivate" }}
		},
		"RouteTablePublic" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "RouteTablePublic" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-RouteTablePublic" }}
		},
		"RouteTablePrivate" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "RouteTablePrivate" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-RouteTablePrivate" }}
		},
		"VPC" : {
		"Description" : "Information about the value",
		"Value" : { "Ref" : "VPC" },
		"Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-VPC" }}
		}
	}
}
